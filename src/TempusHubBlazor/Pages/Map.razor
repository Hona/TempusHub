@page "/maps/{MapName}"
@page "/map/{MapName}"

@using TempusHubBlazor.Data
@using TempusHubBlazor.Models.Tempus.Responses
@using TempusHubBlazor.Models.Tempus.DetailedMapList
@using TempusHubBlazor.Constants
@using TempusHubBlazor.Services
@using TempusHubBlazor.Utilities

@inject TempusCacheService TempusCacheService
@inject TempusDataService TempusDataService
<div class="heading-wrapper">
<h1 class="slim-center">@(ParsedMap?.Name ?? MapName)</h1>
</div>
<br />

@if (string.IsNullOrWhiteSpace(MapName) || ParsedMap == null || FullMapOverView == null)
{
    <p>Loading map... If your can read this entire thing several times then the map isn't found</p>
}
else
{
    <p class="slim-center"><img width="32" height="32" src="@LocalFileConstants.SoldierIcon"> T@(ParsedMap.TierInfo.Soldier)  <img width="32" height="32" src="@LocalFileConstants.DemomanIcon"> T@(ParsedMap.TierInfo.Demoman)</p>
    <p class="slim-center">
        <img width="32" height="32" src="@LocalFileConstants.SoldierIcon"> @if (!string.IsNullOrWhiteSpace(ParsedMap.Videos.Soldier))
        {<a href="@(TempusUtilities.GetYoutubeUrl(ParsedMap.Videos.Soldier))">Showcase</a>}
        else
        { <span>No showcase</span>}  <img width="32" height="32" src="@LocalFileConstants.DemomanIcon"> @if (!string.IsNullOrWhiteSpace(ParsedMap.Videos.Demoman))
        {<a href="@(TempusUtilities.GetYoutubeUrl(ParsedMap.Videos.Demoman))">Showcase</a>}
        else
        { <span>No showcase</span>}
    </p>
    <br />
}

@if (FullMapOverView == null)
{
    <p>Loading map runs data...</p>
}
else
{
<div class="slim-center">
    @if (FullMapOverView.SoldierRuns.Count == 0)
    {
    <p>No soldier runs.</p>
    }
    else
    {
    <table align="center" class="table table-dark table-bordered slim-center multi-table">
        <thead>
            <tr>
                <th colspan="2">Soldier</th>
            </tr>
        </thead>
        <tbody>
            @for (var i = 0; i < FullMapOverView.SoldierRuns.Count; i++)
            {
                <tr>
                    <td>#@(i + 1): @TempusUtilities.FormattedDuration(FullMapOverView.SoldierRuns[i].Duration)</td>
                    <td><a href="@HrefHelper.GetPlayerInfoPath(FullMapOverView.SoldierRuns[i].Id)">@FullMapOverView.SoldierRuns[i].Name</a></td>
                </tr>
            }
        </tbody>
    </table>
    }
    @if (FullMapOverView.DemomanRuns.Count == 0)
    {
    <p>No demoman runs.</p>
    }
    else
    {
    <table class="table table-dark table-bordered slim-center multi-table">
        <colgroup>
            <col width="8*" />
            <col width="8*" />
        </colgroup>
        <thead>
            <tr>
                <th colspan="2">Demoman</th>
            </tr>
        </thead>
        <tbody>
            @for (var i = 0; i < FullMapOverView.DemomanRuns.Count; i++)
            {
                <tr>
                    <td>#@(i + 1): @TempusUtilities.FormattedDuration(FullMapOverView.DemomanRuns[i].Duration)</td>
                    <td><a href="@HrefHelper.GetPlayerInfoPath(FullMapOverView.DemomanRuns[i].Id)">@FullMapOverView.DemomanRuns[i].Name</a></td>
                </tr>
            }
        </tbody>
    </table>
    }
</div>
}

@code{
[Parameter]
    public string MapName { get; set; }

    public DetailedMapOverviewModel ParsedMap { get; set; }
    public MapFullOverviewModel FullMapOverView { get; set; }

    protected override async Task OnInitializedAsync()
    {
        ParsedMap = MapFromPartialName(MapName);
        FullMapOverView = await TempusDataService.GetFullMapOverViewAsync(MapName);
    }

    DetailedMapOverviewModel MapFromPartialName(string partialName)
    {
        var parsedMapName = TempusDataService.ParseMapName(partialName);
        return TempusCacheService.DetailedMapList.FirstOrDefault(x => x.Name == parsedMapName);
    }
    }