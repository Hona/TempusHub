@page "/run/{RunId}"

@using TempusHubBlazor.Data
@using TempusHubBlazor.Models.Tempus.Responses
@using TempusHubBlazor.Constants
@using TempusHubBlazor.Services
@using TempusHubBlazor.Utilities

@inject TempusCacheService _tempusCacheService
@inject TempusDataService _tempusDataService

@if (RunInfo == null || Server == null)
{<span><i>Loading...</i></span> }
else
{
    <div class="heading-wrapper">
        <h1 class="slim-center"><a href="@HrefHelper.GetServerInfoPath(Server.ServerInfo.Shortname)">@Server.ServerInfo.Shortname</a> | <a href="@HrefHelper.GetMapInfoPath(RunInfo.MapInfo.Name)">@RunInfo.MapInfo.Name</a></h1>
    </div>
    <br />
    <table align="center" class="table table-dark table-bordered slim-center">
        <thead>
            <tr>
                <th>Class</th>
                <th>Player</th>
                <th>Zone</th>
                <th>Time</th>
                <th>Date</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td><img width="24" height="24" src="@(RunInfo.RecordInfo.Class == 4 ? LocalFileConstants.DemomanIcon : LocalFileConstants.SoldierIcon)" /></td>
                <td><a href="@HrefHelper.GetPlayerInfoPath(RunInfo.Player.Id ?? 0)">@(_tempusCacheService.GetRealName(RunInfo.Player.Id ?? 0) ?? RunInfo.Player.Name)</a></td>
                <td>@(RunInfo.RecordZoneInfo.Type.ToLower() == "map" ? "Map" : RunInfo.RecordZoneInfo.Type.ToStandardCasing() + " " + RunInfo.RecordZoneInfo.ZoneIndex)</td>
                <td>#@RunInfo.RecordInfo.Rank: @(TempusUtilities.FormattedDuration(RunInfo.RecordInfo.Duration))</td>
                <td>@TempusUtilities.GetDateFromSeconds(RunInfo.RecordInfo.Date).GetTimeStringSinceDateTime()</td>
            </tr>
        </tbody>
    </table>
}

@code {
    [Parameter]
    public string RunId { get; set; }
    public RunInfoModel RunInfo { get; set; }
    public ServerStatusModel Server { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (int.TryParse(RunId, out var parsedRunId))
        {
            RunInfo = await _tempusDataService.GetRunInfoAsync(parsedRunId);
            Server = _tempusCacheService.ServerStatusList.First(x => x.ServerInfo.Id == RunInfo.RecordInfo.ServerId);
        }
        else
        {
            RunInfo = null;
        }
    }

    protected override async Task OnParametersSetAsync() => await OnInitializedAsync();
}
