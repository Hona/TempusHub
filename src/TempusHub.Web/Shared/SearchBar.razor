@using OneOf
@using TempusApi
@using TempusApi.Models
@using TempusApi.Models.Activity
@using TempusApi.Models.Responses
@using TempusHub.Core.Utilities
@using TempusHub.Infrastructure

@inject ITempusClient _tempusDataService
@inject NavigationManager _navigationManager

<div class="search-bar" style="padding-right: 1rem; position: relative;">
    <MudPaper>
        <MudTextField @bind-Value="_searchText"
                      Label="Search"
                      Adornment="Adornment.End"
                      AdornmentIcon="@Icons.Filled.Search"
                      DebounceInterval="500"
                      OnDebounceIntervalElapsed="HandleIntervalElapsed"
                      Style="width: clamp(100px, 250px, 250px)"
                      Variant="Variant.Filled"
                      Margin="Margin.Dense"/>
    </MudPaper>
    <MudOverlay AutoClose
                Absolute="true"
                @bind-Visible="@_showSearchResults">
        <MudPopover Paper
                    Open="_showSearchResults"
                    TransformOrigin="Origin.TopCenter"
                    AnchorOrigin="Origin.BottomCenter"
                    MaxHeight="500"
                    OverflowBehavior="OverflowBehavior.FlipNever">
            <MudList Clickable>
                <MudListSubheader>
                    Maps
                </MudListSubheader>
                @if (_searchResults != null)
                {
                    foreach (var map in _searchResults.Maps)
                    {
                        <MudListItem OnClick="() => { _searchResults = null; _showSearchResults = false; _navigationManager.NavigateTo(HrefHelper.GetMapInfoPath(map.Name)); }">
                            🗺️ @map.Name
                        </MudListItem>
                    }

                    <MudListSubheader>
                        Players
                    </MudListSubheader>
                    foreach (var player in _searchResults.Players)
                    {
                        <MudListItem OnClick="() => { _searchResults = null; _showSearchResults = false; _navigationManager.NavigateTo(HrefHelper.GetPlayerInfoPath(player.Id ?? 0)); }">
                            🧑 @player.Name
                        </MudListItem>
                    }
                }


            </MudList>
        </MudPopover>
    </MudOverlay>
</div>

@code 
{
    private string _searchText;
    
    private PlayerMapSearchResult _searchResults;

    private bool _showSearchResults;

    private async Task HandleIntervalElapsed(string debouncedText)
    {
        if (string.IsNullOrWhiteSpace(debouncedText))
        {
            _searchResults = null;
            _showSearchResults = false;
            return;
        }

        _searchResults = await _tempusDataService.GetSearchResultAsync(debouncedText);
        _showSearchResults = true;
    }
}
